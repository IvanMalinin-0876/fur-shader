uniform sampler2D furMaskMap;
uniform sampler2D textureMap;
uniform vec3 color;
uniform float offset;

varying vec2 vUv;
varying vec3 vNormal;

void main() {
	vec4 furMask = texture2D(furMaskMap, vec2(vUv.s, vUv.t));
	vec4 texture = texture2D(textureMap, vec2(vUv.s * 0.1, vUv.t * 0.05));
	
	// Discard by fur mask
	if (furMask.a <= 0.0 || furMask.g < offset) {
		discard;
	}
	
	// Darker towards bottom
	float shadow = mix(0.0, furMask.b * 1.2, offset);
	
	// Light
	vec3 light = vec3(0.8, 0.8, 0.8);
	float bright = max(0.25, dot(vNormal.xyz, light)) * 4.0;
	
	// Calculate color
	gl_FragColor = vec4(color * texture.xyz * bright * shadow, 1.1 - offset);
}
